/*
落单的数

描述 
笔记 
数据 
评测 
给出2*n + 1 个的数字，除其中一个数字之外其他每个数字均出现两次，找到这个数字。

您在真实的面试中是否遇到过这个题？ Yes 
样例 
给出 [1,2,2,1,3,4,3]，返回 4

挑战 
一次遍历，常数级的额外空间复杂度

标签 
相关题目*/

//Solution1
//先排序，利用sort排序，时间复杂度为nlogn, 相同的数会在一块，遍历时用map记录数字出现的次数，当(i%2==1&&m[A[i]]!=2) 意味着 A[i-1]就是落单的数，否则返回A[A.size()-1]
int singleNumber(vector<int> &A){
if(A.size()==0) return -1;
sort(A.begin(),A.end());
int i=0;map<int,int> m;
while(i<A.size()){
m[A[i]]++;
if(i%2==1&&m[A[i]]!=2) return A[i-1];
i++;
}
return A[A.size()-1];
}

//Solution2
//利用异或
int singleNumber(vector<int> &A){
int num;
for(auto c:A){
num^=c;
}
return num;
}
