不同的路径 II

 描述
 笔记
 数据
 评测
"不同的路径" 的跟进问题：

现在考虑网格中有障碍物，那样将会有多少条不同的路径？

网格中的障碍和空位置分别用 1 和 0 来表示。

 注意事项

m 和 n 均不超过100

您在真实的面试中是否遇到过这个题？ Yes
样例
如下所示在3x3的网格中有一个障碍物：

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
一共有2条不同的路径从左上角到右下角。
//解法1：使用二维数组
 
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // write your code here
       int m=obstacleGrid.size(),n=obstacleGrid[0].size();
       int dp[m][n];
        if(obstacleGrid[0][0]==1) return 0;
        dp[0][0]=1;
         for(int i=0;i<n;++i){
            if(obstacleGrid[0][i]==0)dp[0][i]=1;
            else{
                while(i<n){
                    dp[0][i]=0;++i;
                }
                break;
            }
        }
        for(int i=0;i<m;++i){
            if(obstacleGrid[i][0]==0)dp[i][0]=1;
            else{
                while(i<m){
                    dp[i][0]=0;++i;
                }
                break;
            }
        }
        for(int i=1;i<m;++i)
        for(int j=1;j<n;++j){
           if(obstacleGrid[i][j]==1) dp[i][j]=0;
           else dp[i][j]=dp[i-1][j]+dp[i][j-1];
        }
        return dp[m-1][n-1];
    }
//解法2：使用一维数组
 
    int uniquePathsWithObstacles(vector<vector<int> > &obstacleGrid) {
        // write your code here
       int m=obstacleGrid.size(),n=obstacleGrid[0].size();
        if(obstacleGrid.empty()||obstacleGrid[0][0]==1) return 0;
        vector<int>  dp(n,0);dp[0]=1;
        for(int i=0;i<m;++i)
        for(int j=0;j<n;++j){
            if(obstacleGrid[i][j]==1) dp[j]=0;
            else if(j>0) dp[j]+=dp[j-1];
        }
       return dp[n-1]; 
    }
